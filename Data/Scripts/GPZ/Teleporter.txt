// ----------------------------------
// RSDK Project:  Next Level RSDKv4
// Script Description: Teleporter Object 
// Script Author: Dark
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.value0 : object.lookplayer
private alias object.value1 : object.capture
private alias object.value2 : object.moveXSpeed
private alias object.value3 : object.moveYSpeed
private alias object.value4 : object.generalSpeed
private alias object.value5 : object.launchTimer
private alias object.value6 : object.hasLaunched

// Player Aliases
private alias object.xpos : player.xpos
private alias object.ypos : player.ypos
private alias object.xvel : player.xvel
private alias object.yvel : player.yvel
private alias object.controlMode : player.controlMode 
private alias object.tileCollisions : player.tileCollisions  
private alias object.gravity : player.gravity   
private alias object.speed	: player.speed	
private alias object.state	: player.state
private alias object.animationSpeed	 : player.animationSpeed

// ========================
// Function Declarations
// ========================
reserve function Teleporter_Approach
reserve function Teleporter_Launching

// ========================
// Static Values
// ========================

// ========================
// Tables
// ========================

// ========================
// Function Definitions
// ========================
public function Teleporter_Approach
    if object.hasLaunched == true
        return
    end if
        object.generalSpeed = -0x19000

        Cos256(object.moveXSpeed, object.lookplayer)
        object.moveXSpeed *= object.generalSpeed
        object.moveXSpeed >>= 9

        Sin256(object.moveYSpeed, object.lookplayer)
        object.moveYSpeed *= object.generalSpeed
        object.moveYSpeed >>= 9

        //From left to center
        if player[currentPlayer].xpos < object.xpos
            player[currentPlayer].xpos += object.moveXSpeed

            //Clamp
            if player[currentPlayer].xpos > object.xpos
                player[currentPlayer].xpos = object.xpos
            end if
        end if

        //From right to center
        if player[currentPlayer].xpos > object.xpos
            player[currentPlayer].xpos += object.moveXSpeed

            //Clamp
            if player[currentPlayer].xpos < object.xpos
                player[currentPlayer].xpos = object.xpos
            end if
        end if

        //From left to center
        if player[currentPlayer].ypos < object.ypos
            player[currentPlayer].ypos += object.moveYSpeed

            //Clamp
            if player[currentPlayer].ypos > object.ypos
                player[currentPlayer].ypos = object.ypos
            end if
        end if

        //From right to center
        if player[currentPlayer].ypos > object.ypos
            player[currentPlayer].ypos += object.moveYSpeed

            //Clamp
            if player[currentPlayer].ypos < object.ypos
                player[currentPlayer].ypos = object.ypos
            end if
        end if
    
end function

public function Teleporter_Launching
    object.launchTimer++
    
    player[currentPlayer].animationSpeed = 400

    //Play sound
    if object.launchTimer == 1
        PlaySfx(SfxName[Rolling], false)
    end if

    //Accelerate
    if object.launchTimer > 60
        object.hasLaunched = true
        player[currentPlayer].xpos += 0x80000
    end if
end function
// ========================
// Events
// ========================

event ObjectUpdate
    //object.priority = PRIORITY_ACTIVE
    foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
        //X difference between player and object
        temp0 = player[currentPlayer].xpos
        temp0 -= object.xpos
        
        //Y difference between player and object
        temp1 = player[currentPlayer].ypos
        temp1 -= object.ypos

        BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
        if checkResult == true
            object.capture = true
        end if

         //Capture event
        if object.capture == true
            //Look at player object from the origin
            ATan2(object.lookplayer, temp0, temp1)

            CallFunction(Teleporter_Approach)
            if player[currentPlayer].xpos != object.xpos
                if player[currentPlayer].ypos != object.ypos
                    CallFunction(Teleporter_Approach)  
                end if
            end if

            if player[currentPlayer].xpos == object.xpos
                if player[currentPlayer].ypos == object.ypos
                    CallFunction(Teleporter_Launching)
                end if
            end if

            if object.hasLaunched == true
                CallFunction(Teleporter_Launching)
            end if

            player[currentPlayer].controlMode = -1
            player[currentPlayer].tileCollisions = 0
            player[currentPlayer].gravity = -1
            player[currentPlayer].xvel = 0
            player[currentPlayer].yvel = 0
            player[currentPlayer].speed = 0
            player[currentPlayer].state = 0
        end if
    next
end event

event ObjectDraw
    temp0 = object.ypos
    temp0 -= 0xD0000
    DrawSpriteFX(0, FX_ROTATE, object.xpos, temp0)

    temp0 = object.ypos
    temp0 += 0xD0000
    DrawSpriteFX(0, FX_ROTATE, object.xpos, temp0)
end event

event ObjectStartup
	LoadSpriteSheet("GPZ/Objects.gif")
	SpriteFrame(-11, -11, 22, 22, 214, 1)
end event

// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("GPZ/Objects.gif")
    SpriteFrame(-11, -11, 22, 22, 214, 1)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
