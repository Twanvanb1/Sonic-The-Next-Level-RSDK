// ----------------------------------
// RSDK Project:  Next Level RSDKv4
// Script Description:    Colapsing Platform Object 
// Script Author: Twanvanb1
// Generated by Twanvanb1's script generator
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer
private alias object.value1 : object.rotTimer
private alias object.value2 : object.delay

private alias 0 : CPLAT_IDLE
private alias 1 : CPLAT_COLLAPSE
private alias 2 : CPLAT_COLLAPSED
private alias 3 : CPLAT_TILEDELAY
private alias 4 : CPLAT_TILEFALL
private alias 5 : CPLAT_OFFSCREEN

// ========================
// Function Declarations
// ========================

reserve function CPlat_DebugDraw
reserve function CPlat_DebugSpawn

// ========================
// Static Values
// ========================

// ========================
// Tables
// ========================

// ========================
// Function Definitions
// ========================

private function CPlat_DebugDraw
	DrawSprite(0)
end function


private function CPlat_DebugSpawn
	CreateTempObject(TypeName[C Platform], 0, object.xpos, object.ypos)
end function

// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case CPLAT_IDLE
		break
		
	case CPLAT_COLLAPSE
		if object.timer < 27
			object.timer++
		else
			object.timer = 0
			object.state++
		end if
		break
		
	case CPLAT_COLLAPSED
		PlaySfx(SfxName[Block Break], false)
		// Top Tiles
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 3, object.xpos, object.ypos)
		object[tempObjectPos].ixpos -= 24
		object[tempObjectPos].iypos -= 0
		object[tempObjectPos].xvel = -0x15000
		object[tempObjectPos].yvel = -0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
		
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 3, object.xpos, object.ypos)
		object[tempObjectPos].ixpos -= 8
		object[tempObjectPos].iypos -= 0
		object[tempObjectPos].xvel = -0x05500
		object[tempObjectPos].yvel = -0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
		
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 3, object.xpos, object.ypos)
		object[tempObjectPos].ixpos += 8
		object[tempObjectPos].iypos -= 0
		object[tempObjectPos].xvel = 0x05500
		object[tempObjectPos].yvel = -0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0

		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 3, object.xpos, object.ypos)
		object[tempObjectPos].ixpos += 24
		object[tempObjectPos].iypos -= 0
		object[tempObjectPos].xvel = 0x15000
		object[tempObjectPos].yvel = -0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
	
		// Bottom Tiles
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 1, object.xpos, object.ypos)
		object[tempObjectPos].ixpos -= 24
		object[tempObjectPos].iypos += 16
		object[tempObjectPos].xvel = -0x10000
		object[tempObjectPos].yvel = 0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
		
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 1, object.xpos, object.ypos)
		object[tempObjectPos].ixpos -= 8
		object[tempObjectPos].iypos += 16
		object[tempObjectPos].xvel = -0x05000
		object[tempObjectPos].yvel = 0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
		
		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 2, object.xpos, object.ypos)
		object[tempObjectPos].ixpos += 8
		object[tempObjectPos].iypos += 16
		object[tempObjectPos].xvel = 0x05000
		object[tempObjectPos].yvel = 0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0

		Rand(temp0, 16) 
		CreateTempObject(TypeName[C Platform], 2, object.xpos, object.ypos)
		object[tempObjectPos].ixpos += 24
		object[tempObjectPos].iypos += 16
		object[tempObjectPos].xvel = 0x15000
		object[tempObjectPos].yvel = 0x17000
		object[tempObjectPos].state = 3
		object[tempObjectPos].drawOrder = 5
		object[tempObjectPos].delay = temp0
		
		if object[tempObjectPos].outOfBounds == true
			object[tempObjectPos].type = TypeName[Blank Object]
		end if
		

		// Make this object disappear
		object.type = TypeName[Blank Object]
		object.state++
		break
	case CPLAT_TILEDELAY
		if object.timer < object.delay
			object.timer++
		else
			object.timer = 0
			object.state++
		end if
		break
	case CPLAT_TILEFALL
	
		object.xpos += object.xvel
		object.ypos += object.yvel
		
		if object.outOfBounds == true
			object.xpos = 0
			object.ypos = 0
			object.timer = 0
			object.state++
		end if
		break
	case CPLAT_OFFSCREEN
		if object.outOfBounds == true
			object.state = CPLAT_IDLE
			object.priority = PRIORITY_BOUNDS
		end if
		break
	end switch
	
	if object.state < CPLAT_TILEDELAY
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -32, -8, 32, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			
			if checkResult == true
				if object.state == CPLAT_IDLE
					object.state = CPLAT_COLLAPSE
				end if
			end if
		next
	end if
	
	if object.state == CPLAT_TILEFALL
		if object.delay > 0
			if object.xvel < 0
				object.rotation -= 6		
			else
				object.rotation += 6
			end if
			
			object.rotTimer++
			if object.rotTimer > 1
				object.rotTimer = 0
				object.frame++
				object.frame %= 19
			end if
		end if
	end if
	
end event

event ObjectDraw
	switch object.propertyvalue
	case 0
		DrawSprite(0)
		break
	case 1
	case 2
		DrawSpriteFX(1, FX_ROTATE, object.xpos, object.ypos)
		break
	case 3	
		temp0 = object.frame
		temp0 += 2
		DrawSprite(temp0)
		break
	end switch
end event

event ObjectStartup
	LoadSpriteSheet("GPZ/Objects.gif")
	
	// 0 - Base Sprite
	SpriteFrame(-32, -8, 64, 32, 34, 1)
	
	// 1 - Lower part of platfrom
	SpriteFrame(-8, -8, 16, 16, 34, 17)
	
	// 2 - Animated top part of platfrom
	SpriteFrame(-8, -8, 16, 16, 34, 1)
	
	SpriteFrame(-9, -7, 17, 16, 1, 59)
	SpriteFrame(-9, -7, 17, 14, 1, 76)
	SpriteFrame(-9, -5, 18, 10, 1, 91)
	SpriteFrame(-10, -3, 20, 6, 1, 102)
	SpriteFrame(-10, -2, 20, 4, 1, 109)
	SpriteFrame(-9, -5, 18, 10, 1, 121)
	SpriteFrame(-9, -7, 17, 14, 1, 132)
	SpriteFrame(-9, -8, 17, 16, 1, 147)
	SpriteFrame(-8, -8, 16, 16, 1, 164)
	
	SpriteFrame(-9, -7, 17, 16, 1, 181)
	SpriteFrame(-9, -7, 17, 14, 1, 198)
	SpriteFrame(-9, -5, 18, 10, 1, 213)
	SpriteFrame(-10, -3, 20, 6, 1, 224)
	SpriteFrame(-10, -2, 20, 4, 1, 231)
	SpriteFrame(-10, -3, 20, 6, 1, 236)
	SpriteFrame(-9, -5, 18, 10, 1, 243)
	
	SpriteFrame(-9, -7, 17, 14, 19, 59)
	SpriteFrame(-9, -8, 17, 16, 19, 74)
	
	
	foreach (TypeName[C Platform], arrayPos0, ALL_ENTITIES)
		if object[arrayPos0].xvel < 0
			object[arrayPos0].rotation -= 6		
		else
			object[arrayPos0].rotation += 6
		end if
	next
	
	SetTableValue(TypeName[C Platform], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(CPlat_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(CPlat_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event

// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("GPZ/Objects.gif")
	SpriteFrame(-32, -16, 64, 32, 34, 1)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
