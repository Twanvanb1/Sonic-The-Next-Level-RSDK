// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Fall Platform Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.stood
private alias object.value1 : object.collisionOffset.y
private alias object.value2 : object.timer
private alias object.value3 : object.centerPos.y
private alias object.value4 : object.stoodAngle
private alias object.value0 : object.oscillation

// Types
private alias 0 : FPLATFORM_SMALL
private alias 7 : FPLATFORM_SPIN
private alias 8 : FPLATFORM_SPIN_B
private alias 17 : FPLATFORM_SMALL_V
private alias 49 : FPLATFORM_LARGE_V
private alias 64 : FPLATFORM_SMALL_STATIC
private alias 96 : FPLATFORM_LARGE_STATIC

// States

// Player Aliases
private alias object.ypos	 : player.ypos
private alias object.yvel	 : player.yvel
private alias object.gravity : player.gravity


// ========================
// Function Declarations
// ========================

reserve function FloatPlatform_DebugDraw
reserve function FloatPlatform_DebugSpawn


// ========================
// Function Definitions
// ========================

private function FloatPlatform_DebugDraw
	DrawSprite(0)
end function


private function FloatPlatform_DebugSpawn
	CreateTempObject(TypeName[Float Platform], 0, object.xpos, object.ypos)
	object[tempObjectPos].centerPos.y = object[tempObjectPos].ypos
end function


// ========================
// Events
// ========================

event ObjectUpdate
	switch object.propertyValue
	case FPLATFORM_SMALL
		if object.stood == true
			if object.timer == 0
				object.priority = PRIORITY_ACTIVE
				object.timer = 30
			end if

			if object.stoodAngle < 64
				object.stoodAngle += 4
			end if
		else
			if object.stoodAngle > 0
				object.stoodAngle -= 4
			end if
		end if

		temp0 = object.ypos
		temp0 &= 0xFFFF0000
		
		temp1 = object.stoodAngle
		temp1 <<= 1
		Sin(temp2, temp1)
		temp2 <<= 9
		object.ypos = object.centerPos.y
		object.ypos += temp2
		
		object.collisionOffset.y = object.ypos
		object.collisionOffset.y &= 0xFFFF0000
		object.collisionOffset.y -= temp0
		object.stood = false	
		
		temp1 = object.ypos
			
		object.ypos = temp0
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -32, -8, 32, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				object.stood = true
				player[currentPlayer].ypos += object.collisionOffset.y
			end if
		next

		object.ypos = temp1
		break




	case FPLATFORM_SMALL_V
		temp7 = object.ypos
	
		GetTableValue(temp0, 12, StageSetup_oscillationTable)
		temp0 -= 0x4000
		temp0 <<= 8

		object.ypos = object.centerPos.y
		object.ypos -= temp0
		
		temp1 = object.ypos
		temp7 &= 0xFFFF0000
		
		object.collisionOffset.y = object.ypos
		object.collisionOffset.y &= 0xFFFF0000
		object.collisionOffset.y -= temp7

		object.ypos = temp7
		
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -32, -8, 32, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				player[currentPlayer].ypos += object.collisionOffset.y
			end if
		next

		object.ypos = temp1
		break




	case FPLATFORM_LARGE_V
		temp7 = object.ypos
	
		GetTableValue(temp0, 12, StageSetup_oscillationTable)
		temp0 -= 0x4000
		temp0 <<= 8

		object.ypos = object.centerPos.y
		object.ypos -= temp0
		
		temp1 = object.ypos
		temp7 &= 0xFFFF0000
		
		object.collisionOffset.y = object.ypos
		object.collisionOffset.y &= 0xFFFF0000
		object.collisionOffset.y -= temp7

		object.ypos = temp7
		
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -64, -8, 64, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				player[currentPlayer].ypos += object.collisionOffset.y
			end if
		next

		object.ypos = temp1
		break




	case FPLATFORM_SMALL_STATIC
		if object.stood == true
			if object.timer == 0
				object.priority = PRIORITY_ACTIVE
				object.timer = 30
			end if

			if object.stoodAngle < 64
				object.stoodAngle += 4
			end if
		else
			if object.stoodAngle > 0
				object.stoodAngle -= 4
			end if
		end if

		temp0 = object.ypos
		temp0 &= 0xFFFF0000
		
		object.collisionOffset.y = object.ypos
		object.collisionOffset.y &= 0xFFFF0000
		object.collisionOffset.y -= temp0
		object.stood = false	
		
		temp1 = object.ypos
			
		object.ypos = temp0
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -32, -8, 32, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				object.stood = true
				player[currentPlayer].ypos += object.collisionOffset.y
			end if
		next

		object.ypos = temp1
		break
		


	case FPLATFORM_LARGE_STATIC
		if object.stood == true
			if object.timer == 0
				object.priority = PRIORITY_ACTIVE
				object.timer = 30
			end if

			if object.stoodAngle < 64
				object.stoodAngle += 4
			end if
		else
			if object.stoodAngle > 0
				object.stoodAngle -= 4
			end if
		end if

		temp0 = object.ypos
		temp0 &= 0xFFFF0000
		
		object.collisionOffset.y = object.ypos
		object.collisionOffset.y &= 0xFFFF0000
		object.collisionOffset.y -= temp0
		object.stood = false	
		
		temp1 = object.ypos
			
		object.ypos = temp0
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_PLATFORM, object.entityPos, -64, -8, 64, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				object.stood = true
				player[currentPlayer].ypos += object.collisionOffset.y
			end if
		next

		object.ypos = temp1
		break
	end switch
end event


event ObjectDraw
	switch object.propertyValue
	case FPLATFORM_SMALL
	case FPLATFORM_SMALL_V
	case FPLATFORM_SMALL_STATIC
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break
	case FPLATFORM_LARGE_V
	case FPLATFORM_LARGE_STATIC
		DrawSpriteFX(1, FX_FLIP, object.xpos, object.ypos)
		break
	case FPLATFORM_SPIN
	case FPLATFORM_SPIN_B
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		break
	end switch
end event


event ObjectStartup
	LoadSpriteSheet("GPZ/Objects.gif")
	SpriteFrame(-32, -8, 64, 24, 149, 1)
	SpriteFrame(-64, -8, 128, 24, 1, 34)
	
	SpriteFrame(-8, -8, 16, 16, 132, 1)
	SpriteFrame(-8, -8, 16, 16, 132, 18)

	foreach (TypeName[Float Platform], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].centerPos.y = object[arrayPos0].ypos
	next

	SetTableValue(TypeName[Float Platform], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(FloatPlatform_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(FloatPlatform_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event


// ========================
// Editor Events
// ========================
